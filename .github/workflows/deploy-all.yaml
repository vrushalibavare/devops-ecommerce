name: Deploy Infrastructure and App

on:
  push:
    branches: [main, testing-deploy]
    paths:
      - "terraform/**"
      - "backend/**"
      - "frontend-react/**"
  workflow_dispatch:

env:
  AWS_REGION: ap-southeast-1
  TF_VERSION: 1.5.7

jobs:
  terraform-ci:
    name: "Terraform CI"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: ${{ env.TF_VERSION }}

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Terraform Init
        run: |
          cd terraform
          terraform init

      - name: Terraform Format
        run: |
          cd terraform
          terraform fmt -check

      - name: Terraform Validate
        run: |
          cd terraform
          terraform validate

      - name: Terraform Plan
        run: |
          cd terraform
          terraform plan -var="db_password=${{ secrets.DB_PASSWORD }}"
          
  terraform-apply:
    name: "Terraform Apply"
    needs: terraform-ci
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: ${{ env.TF_VERSION }}

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Terraform Init
        run: |
          cd terraform
          terraform init

      - name: Terraform Apply
        run: |
          cd terraform
          terraform apply -auto-approve -var="db_password=${{ secrets.DB_PASSWORD }}"

  deploy-app:
    name: "Deploy Application"
    needs: terraform-apply
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build and Push Images
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        run: |
          # Build and push product service
          docker build -t $ECR_REGISTRY/shopmate-product:latest ./backend/product-service
          docker push $ECR_REGISTRY/shopmate-product:latest

          # Build and push cart service
          docker build -t $ECR_REGISTRY/shopmate-cart:latest ./backend/cart-service
          docker push $ECR_REGISTRY/shopmate-cart:latest

          # Build and push checkout service
          docker build -t $ECR_REGISTRY/shopmate-checkout:latest ./backend/checkout-service
          docker push $ECR_REGISTRY/shopmate-checkout:latest

          # Build and push order service
          docker build -t $ECR_REGISTRY/shopmate-order:latest ./backend/order-service
          docker push $ECR_REGISTRY/shopmate-order:latest

          # Build and push frontend
          docker build -t $ECR_REGISTRY/shopmate-frontend:latest ./frontend-react
          docker push $ECR_REGISTRY/shopmate-frontend:latest

      - name: Force ECS Services Update
        run: |
          aws ecs update-service --cluster shopmate-dev-cluster --service shopmate-dev-product --force-new-deployment
          aws ecs update-service --cluster shopmate-dev-cluster --service shopmate-dev-cart --force-new-deployment
          aws ecs update-service --cluster shopmate-dev-cluster --service shopmate-dev-checkout --force-new-deployment
          aws ecs update-service --cluster shopmate-dev-cluster --service shopmate-dev-order --force-new-deployment
          aws ecs update-service --cluster shopmate-dev-cluster --service shopmate-dev-frontend --force-new-deployment