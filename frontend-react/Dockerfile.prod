<<<<<<< HEAD
# Build stage
FROM node:20-alpine AS build
=======
FROM node:20 as build
>>>>>>> origin/testing

WORKDIR /app

# Copy package files
COPY package*.json ./

<<<<<<< HEAD
# Install dependencies with clean cache
RUN npm ci --production=false
=======
# Install dependencies
RUN npm install
>>>>>>> origin/testing

# Copy all frontend source code
COPY . .

# Build the app
RUN npm run build

<<<<<<< HEAD
# Production stage with nginx
FROM nginx:alpine

# Copy built assets from build stage
COPY --from=build /app/dist /usr/share/nginx/html

# Copy assets to the correct location
COPY --from=build /app/public/assets /usr/share/nginx/html/assets

# Copy custom nginx config
COPY nginx.conf /etc/nginx/conf.d/default.conf

# Fix permissions for Fargate
RUN chmod -R 755 /var/cache/nginx /var/run /var/log/nginx /etc/nginx/conf.d \
    && chown -R nginx:nginx /var/cache/nginx /var/run /var/log/nginx /etc/nginx/conf.d \
    && touch /var/run/nginx.pid \
    && chown nginx:nginx /var/run/nginx.pid \
    && mkdir -p /dev/shm/nginx \
    && chmod -R 777 /dev/shm/nginx

# Security: Remove unnecessary tools and packages
RUN apk --no-cache upgrade && \
    rm -rf /var/cache/apk/*

# Add healthcheck
HEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 CMD wget -q --spider http://localhost/ || exit 1

EXPOSE 80

# Run as non-root user
USER nginx
=======
# --- Production Stage ---
FROM nginx:alpine

# Copy built frontend assets
COPY --from=build /app/dist /usr/share/nginx/html

# Copy public assets to ensure images are available
COPY --from=build /app/public/assets /usr/share/nginx/html/assets

# Configure nginx
RUN echo 'server { \
    listen 8080; \
    root /usr/share/nginx/html; \
    index index.html; \
    location / { \
        try_files $uri $uri/ /index.html; \
    } \
    location /api/ { \
        return 200 "{}"; \
        add_header Content-Type application/json; \
    } \
}' > /etc/nginx/conf.d/default.conf

# Fix permissions for Fargate
RUN chown -R nginx:nginx /usr/share/nginx/html && \
    chmod -R 755 /usr/share/nginx/html && \
    ln -sf /dev/stdout /var/log/nginx/access.log && \
    ln -sf /dev/stderr /var/log/nginx/error.log

EXPOSE 8080
>>>>>>> origin/testing

CMD ["nginx", "-g", "daemon off;"]